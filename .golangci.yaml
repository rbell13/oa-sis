---
# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 1m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # from this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  skip-dirs:
  - .*swagger-ui
  - .*gen

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true


# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ''

  # sorts results by: filepath, line and column
  sort-results: true

# linters-settings:
#   cyclop:
#     # The maximal code complexity to report.
#     max-complexity: 12
#     # The maximal average package complexity.
#     # If it's higher than 0.0 (float) the check is enabled
#     # Default: 0.0
#     package-average: 0.0
#     # Should ignore tests.
#     # Default: false
#     skip-tests: true
#   funlen:
#     lines: 70
#     statements: 40
#   nestif:
#     min-complexity: 6

linters:
  enable-all: true
  # disable:
  fast: false
